name: Microservices Airbnb Jobs

on:
  push:
    branches:
      - "*"
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17 (or Java version used in your project)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' 
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-api-gateway:latest ./api-gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest ./database
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest ./microservice-authentification
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest ./microservice-booking
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest ./microservice-listing
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest ./microservice-tracking
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest ./microservice-user_management
      
      - name: Push Docker images to registry
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Run tests with Maven
        run: mvn test

  deploy-development:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      # 1. Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install Minikube
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube
          sudo chmod +x /usr/local/bin/minikube

      # 3. Start Minikube
      - name: Start Minikube
        run: |
          minikube start --driver=docker
          kubectl get nodes

      - name: Enable Ingress
        run: |
          minikube addons enable ingress
          kubectl get pods -n ingress-nginx -w --timeout=300s

      - name: Create namespaces
        run: kubectl create namespace development || true

      # 4. Set up Docker to use Minikube's daemon
      - name: Use Minikube Docker Daemon
        run: eval $(minikube docker-env)

      # 5. Pull Docker images from Docker Hub 
      - name: Pull Docker images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-api-gateway:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest

      # 6. Deploy Services
      - name: Deploy Services
        run: |
          kubectl apply -n development -f kubernetes/database-deployment.yaml
          kubectl apply -n development -f kubernetes/authentification-deployment.yaml
          kubectl apply -n development -f kubernetes/booking-deployment.yaml
          kubectl apply -n development -f kubernetes/listing-deployment.yaml
          kubectl apply -n development -f kubernetes/tracking-deployment.yaml
          kubectl apply -n development -f kubernetes/user_management-deployment.yaml
          kubectl apply -n development -f kubernetes/ingress.yml

      - name: Test Services through Ingress
        run: |
          MINIKUBE_IP=$(minikube ip)
          
          # Wait for Ingress to be ready
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=180s

          # Test endpoints through Ingress
          curl -H "Host: microservice.local" http://$MINIKUBE_IP/api/auth/ping
          curl -H "Host: microservice.local" http://$MINIKUBE_IP/api/bookings/ping
          curl -H "Host: microservice.local" http://$MINIKUBE_IP/api/listings/ping
          curl -H "Host: microservice.local" http://$MINIKUBE_IP/api/tracking/ping
          curl -H "Host: microservice.local" http://$MINIKUBE_IP/api/users/ping

  deploy-production:
    runs-on: ubuntu-22.04
    needs: deploy-development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube
          sudo chmod +x /usr/local/bin/minikube

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          kubectl get nodes

      - name: Create namespaces
        run: kubectl create namespace production || true

      - name: Use Minikube Docker Daemon
        run: eval $(minikube docker-env)

      - name: Pull Docker images
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-api-gateway:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest

      - name: Deploy Services to Production
        run: |
          kubectl apply -n production -f kubernetes/database-deployment.yaml
          kubectl apply -n production -f kubernetes/api-gateway-deployment.yaml
          kubectl apply -n production -f kubernetes/authentification-deployment.yaml
          kubectl apply -n production -f kubernetes/booking-deployment.yaml
          kubectl apply -n production -f kubernetes/listing-deployment.yaml
          kubectl apply -n production -f kubernetes/tracking-deployment.yaml
          kubectl apply -n production -f kubernetes/user_management-deployment.yaml

      - name: Wait for Services to be Ready (Production)
        run: kubectl wait --namespace production --for=condition=ready pod --all --timeout=120s