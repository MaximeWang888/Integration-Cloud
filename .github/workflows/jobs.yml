name: Microservices Airbnb Jobs

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17 (or Java version used in your project)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17' 
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-eureka:latest ./microservice-eureka
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest ./database
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest ./microservice-authentification
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest ./microservice-booking
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest ./microservice-listing
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest ./microservice-tracking
          docker build -t ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest ./microservice-user_management

      - name: Push Docker images to registry
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-eureka:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-tracking:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Run tests with Maven
        run: mvn test

  deploy:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Minikube
        run: minikube start --driver=docker --cpus=4 --memory=8192

      - name: Use Minikube Docker Daemon
        run: eval $(minikube docker-env)

      - name: Load Docker images into Minikube
        run: |
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-database:latest
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-eureka:latest
          minikube image load registry.k8s.io/metrics-server/metrics-server:v0.7.2
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-authentification:latest
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-booking:latest
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-listing:latest
          minikube image load ${{ secrets.DOCKER_USERNAME }}/microservice-airbnb-user_management:latest

      - name: Apply Kubernetes Database, Eureka and Metric Server manifests
        run: |
          kubectl apply -f ./k8s-manifests/database-deployment.yaml
          kubectl apply -f ./k8s-manifests/metrics-server-deployment.yaml
          kubectl apply -f ./k8s-manifests/eureka-deployment.yaml

      - name: Wait 90 seconds for Database Pod to be Ready
        run: |
          kubectl wait --for=condition=ready pod --all --timeout=90s

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./k8s-manifests/authentification-deployment.yaml

      - name: Get all pods 
        run: kubeclt get pod -A

      - name: Logs of authentification pod
        run: |
          POD_NAME=$(kubectl get pods -l app=authentification -o jsonpath='{.items[0].metadata.name}')
          echo "Fetching logs for Pod: $POD_NAME"
          echo "========== POD LOGS =========="
          kubectl logs $POD_NAME

      - name: Wait authentification pod to be ready
        run: kubectl wait --for=condition=ready pod -l app=authentification --timeout=90s